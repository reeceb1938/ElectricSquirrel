// <auto-generated />
using System;
using Employment.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Employment.Data.Migrations
{
    [DbContext(typeof(EmploymentContext))]
    partial class EmployerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Employment.Data.Models.Employer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Employers", (string)null);
                });

            modelBuilder.Entity("Employment.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("Name");

                    b.Property<string>("PayPeriod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PayPeriod");

                    b.Property<decimal>("PayRate")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("PayRate");

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PayType");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.HasIndex("Id");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Employment.Data.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BreakInMinutes")
                        .HasColumnType("int")
                        .HasColumnName("BreakInMinutes");

                    b.Property<int>("EmployerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("timestamptz")
                        .HasColumnName("EndDateTime");

                    b.Property<bool>("IsProspective")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("IsProspective");

                    b.Property<string>("PayPeriod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PayPeriod");

                    b.Property<decimal>("PayRate")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("PayRate");

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PayType");

                    b.Property<int>("RecordedBreakInMinutes")
                        .HasColumnType("int")
                        .HasColumnName("RecordedBreakInMinutes");

                    b.Property<DateTime>("RecordedEndDateTime")
                        .HasColumnType("timestamptz")
                        .HasColumnName("RecordedEndDateTime");

                    b.Property<DateTime>("RecordedStartDateTime")
                        .HasColumnType("timestamptz")
                        .HasColumnName("RecordedStartDateTime");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("RoleName");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("timestamptz")
                        .HasColumnName("StartDateTime");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.HasIndex("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Shifts", (string)null);
                });

            modelBuilder.Entity("Employment.Data.Models.Role", b =>
                {
                    b.HasOne("Employment.Data.Models.Employer", "Employer")
                        .WithMany("Roles")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("Employment.Data.Models.Shift", b =>
                {
                    b.HasOne("Employment.Data.Models.Employer", "Employer")
                        .WithMany("Shifts")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Employment.Data.Models.Role", "Role")
                        .WithMany("Shifts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employer");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Employment.Data.Models.Employer", b =>
                {
                    b.Navigation("Roles");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("Employment.Data.Models.Role", b =>
                {
                    b.Navigation("Shifts");
                });
#pragma warning restore 612, 618
        }
    }
}
